; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature
; RUN: opt -aa-pipeline=basic-aa -passes=inline -enable-noalias-to-md-conversion -S < %s | FileCheck %s

target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

declare void @llvm.experimental.noalias.scope.decl(metadata) #0

define void @caller_equals_callee(ptr noalias %p0, ptr noalias %p1, i32 %cnt) {
entry:
  %add.ptr = getelementptr inbounds i32, ptr %p0, i64 2
  %add.ptr1 = getelementptr inbounds i32, ptr %p1, i64 2
  tail call void @llvm.experimental.noalias.scope.decl(metadata !0)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !3)
  store i32 10, ptr %add.ptr, align 4, !alias.scope !0, !noalias !3
  store i32 20, ptr %add.ptr1, align 4, !alias.scope !3, !noalias !0
  %cmp = icmp eq i32 %cnt, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 11, ptr %p0, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %add.ptr2 = getelementptr inbounds i32, ptr %p1, i64 1
  %add.ptr3 = getelementptr inbounds i32, ptr %p0, i64 1
  tail call void @caller_equals_callee(ptr nonnull %add.ptr2, ptr nonnull %add.ptr3, i32 0)
  store i32 12, ptr %p1, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

define void @test01(ptr noalias %p0, ptr noalias %p1, i32 %cnt) {
entry:
  store i32 13, ptr %p0, align 4
  %add.ptr = getelementptr inbounds i32, ptr %p0, i64 1
  %add.ptr1 = getelementptr inbounds i32, ptr %p1, i64 1
  call void @caller_equals_callee(ptr nonnull %add.ptr, ptr nonnull %add.ptr1, i32 %cnt)
  ret void
}

attributes #0 = { inaccessiblememonly nofree nosync nounwind willreturn }

!0 = !{!1}
!1 = distinct !{!1, !2, !"do_store: %p0"}
!2 = distinct !{!2, !"do_store"}
!3 = !{!4}
!4 = distinct !{!4, !2, !"do_store: %p1"}
